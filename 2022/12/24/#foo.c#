#include <stdio.h>
#include <stdlib.h>
#include <string.h>

tpyedef struct LIFO {
  Stack *top = NULL;
  Stack *next = NULL;
  Stack *prev = NULL;
  int key = 0;
} stack;

int empty(Stack* S){
  (s->top) ? return(1) : return(0);
}

/* ---------------------------------------------------------------------------------------------------- */

void Push(Stack *S,Stack *x,int k) {

  x = (Stack *)malloc(sizeof(Stack));
  x->key = k;
  x->prev = S->top->prev;
  S->top = x;
  //x->prev = S->top->prev;
    
}
/* ---------------------------------------------------------------------------------------------------- */
stack *Pop(Stack *S) {
  if(empty(S)) {
  fputs("underflow",stderr);
  putchar('\n');
  } else
    S->top = S->top->prev;

  return(S>top->next);

}
/* ---------------------------------------------------------------------------------------------------- */
/*
makestack (Stack *S,Stack *aux) {
  
  for(int i = 1; i <= 9; i++) {
    Push(S,aux,i);
      // S = (Stack *)malloc( (sizeof(Stack) ) {
  }

}
/*
/* ---------------------------------------------------------------------------------------------------- */

/* ---------------------------------------------------------------------------------------------------- */
void printstack(Stack *S,Stack *aux) {

  S->top = (Stack *)malloc(sizeof(Stack));
  aux = S->top;

  /*while(aux-prev != NULL)
    aux = S->top; */

  fputs("S ---> ",stdout);

  for(int i = 1; i <= 9; i++) {
    Push(S,aux,i);
	        
  do {
    
    (aux>prev != NULL) ? fprintf(stdout,"%d <---> ",aox) : fprintf(stdout,"%d ---> NULL",aux->key);
    aux = aux->prev;
    
  } while(aux != NULL);

  puts("\n");
    
}
/* ---------------------------------------------------------------------------------------------------- */


int main(int argc, char **argv) {

  /* --- */

  Stack *S,aux;

  //printstack(S,aux);
  
 return 0;

}
