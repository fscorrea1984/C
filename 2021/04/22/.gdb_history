set args 01110010
start
p argv[1]
p argv[1][0]
p argv[1][1]
disas
n
p argv[1]
p argv[1][1]
watch i
c
list
list foo.c
q
set args
set args 01110010
q
i f
bt
frame 3
p A[0]
p argv[1][0]
p atoi(argv[1][0])
compile-print atoi(argv[1][0])
compile-print atoi(argv[1][0]);
compile-print atoi(argv[1][0])
eval atoi(argv[1][0])
eval "atoi(argv[1][0]);"
eval "atoi(argv[1][0])"
expr "atoi(argv[1][0])"
run 01110010
2
q
set args 01110010
start
q
set args 01110010
start
list 13
n
n
list 9
p str
n
p str
p &str
n
list 15
p str
eval str
output str
help
help data
explore str
display str
display str[1]
display str[5]
display str[4]
display str[2]
display str[1]
display str[3]
display str[6]
display str[7]
display str[8]
list
p $rip
disas
ni
p A
ni
ni
ni
ni
ni
ni
ni
ni
ni
ni
ni
p A
disas
list 15
ni
bt
frane 1
frame 1
p A
p str
p &str
p &A
frame 2
frame 0
q
set args 01110010
start
break 16
c
p i
watch i
list 16
list 20
c
p i
p A
i w
info watch
disable 3
info watch
break 19
break 22
c
p i
c
p i
disable 3
info watch
delete watch 3
info watch
i b
disable 2
c
p A
plon A
plong A
ptype long A
p &A
x/8wx *0x7fffffffdc00
x/8wx 0x7fffffffdc00
p (char) A
p A
p (char []) A
p A[0]
p A[1]
p A[2]
p A[3]
p A[4]
p &str
q
start
set args 01110010
n
disas
p A
bt
frame 0
p A
down
q
set args 01110010
start
break 22
c
p (&argv[1])+1
p &argv[1]
x/8wx 0x7fffffffdd70
x/8wx *0x7fffffffdd70
x/8cx *0x7fffffffdd70
x/1cx *0x7fffffffdd70
x/8wx *0x7fffffffdd68
x/8wx 0x7fffffffdd68
x/8ws 0x7fffffffdd68
x/8ws *0x7fffffffdd68
x/s *0x7fffffffdd70
x/s 0x7fffffffdd70
x/8s 0x7fffffffdd70
x/8s 0x7fffffffdd78
x/8x 0x7fffffffdd78
p argv[1]
p arr
p *arr+1
p *arr+1
q
q
