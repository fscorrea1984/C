p $fs:0x28
i r $fs_base
p *0x7ffff7f95568
p/xw *0x7ffff7f95568
x/xw 0x7ffff7f95568
x/xw 0x7ffff7f95560
x/4xw 0x7ffff7f95560
x/gw 0x7ffff7f95568
x/xg 0x7ffff7f95568
x/2xw 0x7ffff7f95568
nexti
nexti
x/16xw $rsp
disas test_function
c
i rbp rsp rip
i r rbp rsp rip
disas main
i r
q
start
list main
list function
info locals
disas main
disas function
disas main
i r rbp rsp rip
nexti
nexti
i r rbp rsp rip
nexti
i r rbp rsp rip
nexti
i r rbp rsp rip
disas main
i r rbp rsp rip edi
x/16xw $rsp
nexti
x/16xw $rsp
p $fs_code
p $fs_base
i r $fs_base
nexti
x/16xw $rsp
p *0x7ffff7f95540+0x28
x/2xw 0x7ffff7f95540+0x28
x/2xw 0x7ffff7f95568
nexti
x/16xw $rsp
p $rbp-0x8
nexti
x/16xw $rsp
disas main
disas function
list function
c
q
start
break 11
break 15
break 22
list main
list main:10
list main:20
list 20
list 15
disas
c
p mem_size
set args 30
restart
start
p atoi(argv[1])
p argv[1]
bt
frame 4
disas main
p argv[1]
p argv[0]
p *argv[0]
c
bt
frame 4
disas main
n
q
start
p argv[1]
q
set args 30
start
p argv[1]
nexti
disas
p argv[1]
nexti
nexti
nexti
nexti
nexti
p argv[1]
p atoi(argv[1])
n
p mem_size
p sizeof(char_ptr)
explore *char_ptr
explore char_ptr
n
p mem_size
p/d mem_size
n
p char_ptr
n
n
explore char_ptr
explore char_ptr
p char_ptr
x/s 0x5555555596b0
x/16xw 0x5555555596b0
q
set args 20
start
break 11
break 15
break 22
c
p argv[1]
p atoi(argv[1])
p/d atoi(argv[1])
n
p char_ptr
n
n
p char_ptr
n
p char_ptr
x/16xw 0x5555555596b0
n
x/16xw 0x5555555596b0
x/s 0x5555555596b0
x/xb 0x5555555596d0
x/xb 0x5555555596d1
x/xb 0x5555555596d2
x/xb 0x5555555596d3
x/xb 0x5555555596d4
c
bt
frame 6
list 27
info heap
info proc mem
info proc
info mem
disas .start
disas start
disas _start
disas .text
disas text
disas main
disas _GNU_EH_FRAME_EH
disas __GNU_EH_FRAME_HDR
disassemble __GNU_EH_FRAME_HDR
disassemble __DYNAMIC
disassemble _DYNAMIC
info mem char_ptr
bt
frame 6
info mem char_ptr
info addr char_ptr
p char_ptr
disassemble 0x5555555596b0
disassemble *0x5555555596b0
disassemble 0x5555555596a0
disassemble 0x555555559690
disassemble 0x555555559600
help
apropos heap
help data
show write
show mem
show mem inacessible-by-default
help show mem
show mem inaccessible-by-default
set mem inaccessible-by-default=false
set mem inaccessible-by-default false
set mem inaccessible-by-default off
show mem inaccessible-by-default
p char_ptr
x/xw $8-0xb0
x/176xw $8-0xb0
p int_ptr
n
rn
show record
apropos reverse
rc
show exec-direction
set exec-direction backward
help set exec-direction 
set exec-direction reverse
q
set args 20
show exec-direction
set exec-direction reverse
set exec-direction forward
run
q
start
list binary_print
list 47
break 43
c
p shift
p/d shift
p/d 0x80
p/b 0x80
p/t 0x80
p/t 0xF0
p/d 0x100
c
p shift
c
p shift
c
p shift
c
p shift
c
p shift
c
p shift
c
watch shift
start
info breal
info break
delete 2
watch shift
break binary_print
c
nexti
n
n
n
watch shift
info break
delete 4
c
c
c
c
c
info break
c
q
